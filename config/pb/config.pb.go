// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: config.proto

/*
Package configpb is a generated protocol buffer package.

It is generated from these files:
	config.proto

It has these top-level messages:
	WalletConfig
*/
package configpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type WalletConfig struct {
	PubPass  string                 `protobuf:"bytes,1,opt,name=pub_pass,json=pubPass,proto3" json:"pub_pass"`
	API      *WalletConfig_API      `protobuf:"bytes,2,opt,name=api" json:"api"`
	Settings *WalletConfig_Settings `protobuf:"bytes,3,opt,name=settings" json:"settings"`
}

func (m *WalletConfig) Reset()                    { *m = WalletConfig{} }
func (m *WalletConfig) String() string            { return proto.CompactTextString(m) }
func (*WalletConfig) ProtoMessage()               {}
func (*WalletConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{0} }

func (m *WalletConfig) GetPubPass() string {
	if m != nil {
		return m.PubPass
	}
	return ""
}

func (m *WalletConfig) GetAPI() *WalletConfig_API {
	if m != nil {
		return m.API
	}
	return nil
}

func (m *WalletConfig) GetSettings() *WalletConfig_Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type WalletConfig_API struct {
	Host         string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host"`
	GRPCPort     string   `protobuf:"bytes,2,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port"`
	HttpPort     string   `protobuf:"bytes,3,opt,name=http_port,json=httpPort,proto3" json:"http_port"`
	HttpCORSAddr []string `protobuf:"bytes,4,rep,name=http_cors_addr,json=httpCORSAddr" json:"http_cors_addr"`
	DisableTls   bool     `protobuf:"varint,5,opt,name=disable_tls,json=disableTls,proto3" json:"disable_tls"`
	RpcCert      string   `protobuf:"bytes,6,opt,name=rpc_cert,json=rpcCert,proto3" json:"rpc_cert"`
	RpcKey       string   `protobuf:"bytes,7,opt,name=rpc_key,json=rpcKey,proto3" json:"rpc_key"`
}

func (m *WalletConfig_API) Reset()                    { *m = WalletConfig_API{} }
func (m *WalletConfig_API) String() string            { return proto.CompactTextString(m) }
func (*WalletConfig_API) ProtoMessage()               {}
func (*WalletConfig_API) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{0, 0} }

func (m *WalletConfig_API) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *WalletConfig_API) GetGRPCPort() string {
	if m != nil {
		return m.GRPCPort
	}
	return ""
}

func (m *WalletConfig_API) GetHttpPort() string {
	if m != nil {
		return m.HttpPort
	}
	return ""
}

func (m *WalletConfig_API) GetHttpCORSAddr() []string {
	if m != nil {
		return m.HttpCORSAddr
	}
	return nil
}

func (m *WalletConfig_API) GetDisableTls() bool {
	if m != nil {
		return m.DisableTls
	}
	return false
}

func (m *WalletConfig_API) GetRpcCert() string {
	if m != nil {
		return m.RpcCert
	}
	return ""
}

func (m *WalletConfig_API) GetRpcKey() string {
	if m != nil {
		return m.RpcKey
	}
	return ""
}

type WalletConfig_Settings struct {
	AddressGapLimit         uint32 `protobuf:"varint,1,opt,name=address_gap_limit,json=addressGapLimit,proto3" json:"address_gap_limit"`
	MaxUnusedStakingAddress uint32 `protobuf:"varint,2,opt,name=max_unused_staking_address,json=maxUnusedStakingAddress,proto3" json:"max_unused_staking_address"`
	MaxTxFee                string `protobuf:"bytes,3,opt,name=max_tx_fee,json=maxTxFee,proto3" json:"max_tx_fee"`
}

func (m *WalletConfig_Settings) Reset()                    { *m = WalletConfig_Settings{} }
func (m *WalletConfig_Settings) String() string            { return proto.CompactTextString(m) }
func (*WalletConfig_Settings) ProtoMessage()               {}
func (*WalletConfig_Settings) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{0, 1} }

func (m *WalletConfig_Settings) GetAddressGapLimit() uint32 {
	if m != nil {
		return m.AddressGapLimit
	}
	return 0
}

func (m *WalletConfig_Settings) GetMaxUnusedStakingAddress() uint32 {
	if m != nil {
		return m.MaxUnusedStakingAddress
	}
	return 0
}

func (m *WalletConfig_Settings) GetMaxTxFee() string {
	if m != nil {
		return m.MaxTxFee
	}
	return ""
}

func init() {
	proto.RegisterType((*WalletConfig)(nil), "configpb.WalletConfig")
	proto.RegisterType((*WalletConfig_API)(nil), "configpb.WalletConfig.API")
	proto.RegisterType((*WalletConfig_Settings)(nil), "configpb.WalletConfig.Settings")
}

func init() { proto.RegisterFile("config.proto", fileDescriptorConfig) }

var fileDescriptorConfig = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0x8f, 0x93, 0x40,
	0x18, 0xc6, 0x83, 0xac, 0x5d, 0x78, 0xb7, 0xab, 0x71, 0x2e, 0x8b, 0x68, 0xb2, 0xc4, 0x78, 0x20,
	0xc6, 0x70, 0xd0, 0x63, 0x4f, 0xa4, 0x89, 0xa6, 0xd1, 0x03, 0x99, 0xd6, 0x78, 0x9c, 0x0c, 0x30,
	0xa5, 0xa4, 0xc0, 0x4c, 0xe6, 0x1d, 0x12, 0xfa, 0x31, 0xfc, 0x62, 0x7e, 0x1f, 0x6f, 0x66, 0x06,
	0x6a, 0xbc, 0xec, 0xed, 0xe5, 0xf9, 0x3d, 0x0f, 0xef, 0x9f, 0x0c, 0xac, 0x2b, 0x39, 0x1c, 0xdb,
	0x26, 0x53, 0x5a, 0x1a, 0x49, 0x82, 0xf9, 0x4b, 0x95, 0xef, 0xfe, 0xf8, 0xb0, 0xfe, 0xc9, 0xbb,
	0x4e, 0x98, 0xad, 0x93, 0xc8, 0x6b, 0x08, 0xd4, 0x58, 0x32, 0xc5, 0x11, 0x23, 0x2f, 0xf1, 0xd2,
	0x90, 0xde, 0xaa, 0xb1, 0x2c, 0x38, 0x22, 0xf9, 0x08, 0x3e, 0x57, 0x6d, 0xf4, 0x2c, 0xf1, 0xd2,
	0xbb, 0x4f, 0x71, 0x76, 0xfd, 0x47, 0xf6, 0x7f, 0x3e, 0xcb, 0x8b, 0x1d, 0xb5, 0x36, 0xb2, 0x81,
	0x00, 0x85, 0x31, 0xed, 0xd0, 0x60, 0xe4, 0xbb, 0xc8, 0xe3, 0x13, 0x91, 0xfd, 0x62, 0xa3, 0xff,
	0x02, 0xf1, 0x6f, 0x0f, 0xfc, 0xbc, 0xd8, 0x11, 0x02, 0x37, 0x27, 0x89, 0x66, 0x99, 0xc4, 0xd5,
	0xe4, 0x0d, 0x84, 0x8d, 0x56, 0x15, 0x53, 0x52, 0x1b, 0x37, 0x4c, 0x48, 0x03, 0x2b, 0x14, 0x52,
	0x3b, 0x78, 0x32, 0x46, 0xcd, 0xd0, 0x9f, 0xa1, 0x15, 0x1c, 0x7c, 0x0f, 0x2f, 0x1c, 0xac, 0xa4,
	0x46, 0xc6, 0xeb, 0x5a, 0x47, 0x37, 0x89, 0x9f, 0x86, 0x74, 0x6d, 0xd5, 0xad, 0xd4, 0x98, 0xd7,
	0xb5, 0x26, 0x8f, 0x70, 0x57, 0xb7, 0xc8, 0xcb, 0x4e, 0x30, 0xd3, 0x61, 0xf4, 0x3c, 0xf1, 0xd2,
	0x80, 0xc2, 0x22, 0x1d, 0x3a, 0xb4, 0x27, 0xb2, 0xfd, 0x2b, 0xa1, 0x4d, 0xb4, 0x9a, 0x4f, 0xa4,
	0x55, 0xb5, 0x15, 0xda, 0x90, 0x07, 0xb0, 0x25, 0x3b, 0x8b, 0x4b, 0x74, 0xeb, 0xc8, 0x4a, 0xab,
	0xea, 0x9b, 0xb8, 0xc4, 0xbf, 0x3c, 0x08, 0xae, 0x7b, 0x92, 0x0f, 0xf0, 0xca, 0x76, 0x17, 0x88,
	0xac, 0xe1, 0x8a, 0x75, 0x6d, 0xdf, 0xce, 0x2b, 0xde, 0xd3, 0x97, 0x0b, 0xf8, 0xca, 0xd5, 0x77,
	0x2b, 0x93, 0x0d, 0xc4, 0x3d, 0x9f, 0xd8, 0x38, 0x8c, 0x28, 0x6a, 0x86, 0x86, 0x9f, 0xdb, 0xa1,
	0x61, 0x8b, 0xcb, 0xad, 0x7f, 0x4f, 0x1f, 0x7a, 0x3e, 0xfd, 0x70, 0x86, 0xfd, 0xcc, 0xf3, 0x19,
	0x93, 0xb7, 0x00, 0x36, 0x6c, 0x26, 0x76, 0x14, 0xe2, 0x7a, 0x8e, 0x9e, 0x4f, 0x87, 0xe9, 0x8b,
	0x10, 0xe5, 0xca, 0x3d, 0x86, 0xcf, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xab, 0xbd, 0xaa, 0x8a,
	0x1c, 0x02, 0x00, 0x00,
}
